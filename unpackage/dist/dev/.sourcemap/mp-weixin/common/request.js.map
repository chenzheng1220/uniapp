{"version":3,"file":"request.js","sources":["common/request.js"],"sourcesContent":["import operate from './operate.js'\nconst http = (options) => {\n\treturn new Promise((resolve, reject) => {\n\t\tuni.request({\n\t\t\turl: operate.api() + options.url, //接口地址：前缀+方法中传入的地址\n\t\t\tmethod: options.method || 'GET', //请求方法：传入的方法或者默认是“GET”\n\t\t\tdata: options.data || {}, //传递参数：传入的参数或者默认传递空集合\n\t\t\theader: {\n\t\t\t   'Authorization':\"token\", //自定义请求头信息\n\t\t\t},\n\t\t\tsuccess: (res) => {\n\t\t\t\tif(res.data.code!==200){ //自定请求失败的情况\n\t\t\t\t\tuni.showToast({\n\t\t\t\t\t    title:res.data.msg,\n\t\t\t\t\t    icon: 'none'\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tresolve(res.data)//成功\n\t\t\t},\n\t\t\t// 这里的接口请求，如果出现问题就输出接口请求失败\n\t\t\tfail: (err) => {\n\t\t\t\tuni.showToast({\n\t\t\t\t    title: \"\" + err.msg,\n\t\t\t\t    icon: 'none'\n\t\t\t\t});\n\t\t\t\treject(err)\n\t\t\t}\n\t\t})\n\t})\n}\r\n\r\n\nexport default http\n"],"names":["uni","operate"],"mappings":";;;AACK,MAAC,OAAO,CAAC,YAAY;AACzB,SAAO,IAAI,QAAQ,CAAC,SAAS,WAAW;AACvCA,kBAAAA,MAAI,QAAQ;AAAA,MACX,KAAKC,eAAO,QAAC,IAAK,IAAG,QAAQ;AAAA;AAAA,MAC7B,QAAQ,QAAQ,UAAU;AAAA;AAAA,MAC1B,MAAM,QAAQ,QAAQ,CAAE;AAAA;AAAA,MACxB,QAAQ;AAAA,QACL,iBAAgB;AAAA;AAAA,MAClB;AAAA,MACD,SAAS,CAAC,QAAQ;AACjB,YAAG,IAAI,KAAK,SAAO,KAAI;AACtBD,wBAAAA,MAAI,UAAU;AAAA,YACV,OAAM,IAAI,KAAK;AAAA,YACf,MAAM;AAAA,UACf,CAAM;AAAA,QACD;AACD,gBAAQ,IAAI,IAAI;AAAA,MAChB;AAAA;AAAA,MAED,MAAM,CAAC,QAAQ;AACdA,sBAAAA,MAAI,UAAU;AAAA,UACV,OAAO,KAAK,IAAI;AAAA,UAChB,MAAM;AAAA,QACd,CAAK;AACD,eAAO,GAAG;AAAA,MACV;AAAA,IACJ,CAAG;AAAA,EACH,CAAE;AACF;;"}